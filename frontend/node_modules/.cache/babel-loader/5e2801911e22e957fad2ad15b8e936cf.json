{"ast":null,"code":"var _jsxFileName = \"/home/fabrizio/WebstormProjects/front_upvote/src/components/posts.js\";\nimport React, { Component } from 'react';\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      isLoading: true\n    };\n    this.upvote = this.upvote.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch('/posts').then(res => res.json()).then(data => {\n      this.setState({\n        posts: data,\n        isLoading: false\n      });\n    }).catch(console.log);\n  }\n\n  upvote(id) {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'id': id\n      })\n    };\n    fetch('/upvote', requestOptions).catch(reason => console.log(reason));\n  }\n\n  render() {\n    const {\n      posts,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }\n      }, \"Loading...\");\n    } else {\n      return posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        class: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, post.user), /*#__PURE__*/React.createElement(\"h6\", {\n        class: \"card-subtitle mb-2 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, post.date), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, post.text), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, \"Upvotes: \", post.upvotes), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.upvote(post.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/home/fabrizio/WebstormProjects/front_upvote/src/components/posts.js"],"names":["React","Component","Posts","constructor","props","state","posts","isLoading","upvote","bind","componentDidMount","setState","fetch","then","res","json","data","catch","console","log","id","requestOptions","method","headers","body","JSON","stringify","reason","render","map","post","user","date","text","upvotes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AACA,MAAMC,KAAN,SAAoBD,SAApB,CAA6B;AAGzBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,SAAS,EAAE;AAAvB,KAAb;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AAACJ,MAAAA,SAAS,EAAC;AAAX,KAAd;AACAK,IAAAA,KAAK,CAAC,QAAD,CAAL,CACKC,IADL,CACWC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADlB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,WAAKL,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEU,IAAR;AAAcT,QAAAA,SAAS,EAAE;AAAzB,OAAd;AACH,KAJL,EAKKU,KALL,CAKWC,OAAO,CAACC,GALnB;AAMH;;AAEDX,EAAAA,MAAM,CAACY,EAAD,EAAI;AACN,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAAC,cAAKN;AAAN,OAAf;AAHc,KAAvB;AAKAR,IAAAA,KAAK,CAAC,SAAD,EAAWS,cAAX,CAAL,CAAgCJ,KAAhC,CAAsCU,MAAM,IAAIT,OAAO,CAACC,GAAR,CAAYQ,MAAZ,CAAhD;AACP;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACtB,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAqB,KAAKF,KAAhC;;AAEA,QAAIE,SAAJ,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFD,MAGQ;AAAE,aAAOD,KAAK,CAACuB,GAAN,CAAWC,IAAD,iBACf;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBA,IAAI,CAACC,IAA7B,CADJ,eAEI;AAAI,QAAA,KAAK,EAAC,+BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2CD,IAAI,CAACE,IAAhD,CAFJ,eAGI;AAAG,QAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBF,IAAI,CAACG,IAA3B,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAcH,IAAI,CAACI,OAAnB,CAJJ,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAK1B,MAAL,CAAYsB,IAAI,CAACV,EAAjB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ,CADK,CAAP;AAUC;AAGd;;AA9C4B;;AA+C3B,eAAelB,KAAf","sourcesContent":["import React, {Component} from 'react'\nclass Posts extends Component{\n\n\n    constructor(props) {\n        super(props);\n        this.state = {posts: [], isLoading: true};\n        this.upvote = this.upvote.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({isLoading:true});\n        fetch('/posts')\n            .then( res => res.json())\n            .then((data) => {\n                this.setState({posts: data, isLoading: false})\n            })\n            .catch(console.log)\n    }\n\n    upvote(id){\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json'},\n            body:JSON.stringify({'id':id})\n        };\n        fetch('/upvote',requestOptions).catch(reason => console.log(reason))\n}\nrender() {\n    const {posts, isLoading} = this.state;\n\n    if (isLoading) {\n        return <p>Loading...</p>;\n    }else\n            { return posts.map((post) => (\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\">{post.user}</h5>\n                        <h6 class=\"card-subtitle mb-2 text-muted\">{post.date}</h6>\n                        <p class=\"card-text\">{post.text}</p>\n                        <h5>Upvotes: {post.upvotes}</h5>\n                        <button onClick={this.upvote(post.id)} ></button>\n                    </div>\n                </div>\n            ))}\n\n\n}\n} export default Posts;\n\n\n"]},"metadata":{},"sourceType":"module"}