{"ast":null,"code":"import _regeneratorRuntime from\"/home/fabrizio/SegWare/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/fabrizio/SegWare/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/fabrizio/SegWare/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/fabrizio/SegWare/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/fabrizio/SegWare/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/home/fabrizio/SegWare/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/fabrizio/SegWare/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import AppNavbar from\"./AppNavBar\";import{Button,CardText,Col,Spinner}from\"reactstrap\";import Moment from'moment';import{blue}from\"color-name\";var Posts=/*#__PURE__*/function(_Component){_inherits(Posts,_Component);var _super=_createSuper(Posts);function Posts(props){var _this;_classCallCheck(this,Posts);_this=_super.call(this,props);_this.state={posts:[],isLoading:true};_this.upvote=_this.upvote.bind(_assertThisInitialized(_this));return _this;}_createClass(Posts,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.setState({isLoading:true});fetch('/posts').then(function(res){return res.json();}).then(function(data){_this2.setState({posts:data,isLoading:false});}).catch(console.log);}},{key:\"upvote\",value:function(){var _upvote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var _this3=this;var requestOptions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:requestOptions={method:'POST',headers:{'Content-Type':'application/json'}};_context.next=3;return fetch('/upvote?id='+id,requestOptions).catch(function(reason){return console.log(reason);}).then(function(){var json=_this3.state.posts;for(var k=0;k<json.length;++k){if(id===json[k]['id']){json[k]['upvotes']=json[k]['upvotes']+1;}}_this3.setState({posts:json});});case 3:case\"end\":return _context.stop();}}},_callee);}));function upvote(_x){return _upvote.apply(this,arguments);}return upvote;}()},{key:\"render\",value:function render(){var _this4=this;var _this$state=this.state,posts=_this$state.posts,isLoading=_this$state.isLoading;if(isLoading){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AppNavbar,null),/*#__PURE__*/React.createElement(Spinner,{color:\"primary\"}));}if(posts.length===0){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AppNavbar,null),/*#__PURE__*/React.createElement(\"p\",null,\"Sem Posts para mostrar :(\"));}else{var postlist=posts.map(function(post,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"card\",key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"h5\",null,post.user),/*#__PURE__*/React.createElement(\"label\",null,\"\\xE0s \",Moment(post.date).format(' h:mm:ss a, DD/MM/YYYY'),\":\"),/*#__PURE__*/React.createElement(Col,{sm:\"6\"},/*#__PURE__*/React.createElement(\"card\",{body:true,style:{backgroundColor:'#878787'}},/*#__PURE__*/React.createElement(CardText,{style:{color:'white'}},post.text))),/*#__PURE__*/React.createElement(\"h5\",null,\"Upvotes: \",post.upvotes),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this4.upvote(post.id);}},\"Upvote\")));});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AppNavbar,null),postlist);}}}]);return Posts;}(Component);export default Posts;","map":{"version":3,"sources":["/home/fabrizio/SegWare/frontend/src/components/posts.js"],"names":["React","Component","AppNavbar","Button","CardText","Col","Spinner","Moment","blue","Posts","props","state","posts","isLoading","upvote","bind","setState","fetch","then","res","json","data","catch","console","log","id","requestOptions","method","headers","reason","k","length","postlist","map","post","index","user","date","format","backgroundColor","color","text","upvotes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport AppNavbar from \"./AppNavBar\";\nimport {Button, CardText, Col, Spinner} from \"reactstrap\";\nimport Moment from 'moment';\nimport {blue} from \"color-name\";\n\nclass Posts extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {posts: [], isLoading: true};\n        this.upvote = this.upvote.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n        fetch('/posts')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({posts: data, isLoading: false})\n            })\n            .catch(console.log)\n    }\n\n    async upvote(id) {\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n        };\n        await fetch('/upvote?id=' + id, requestOptions)\n            .catch(reason => console.log(reason))\n            .then(() => {\n                let json = this.state.posts\n                for (var k = 0; k < json.length; ++k) {\n                    if (id === json[k]['id']) {\n                        json[k]['upvotes'] = json[k]['upvotes'] + 1;\n                    }\n                }\n                this.setState({posts: json})\n            })\n\n    }\n\n    render() {\n        const {posts, isLoading} = this.state;\n\n        if (isLoading) {\n            return (<div>\n                    <AppNavbar/>\n                    <Spinner color=\"primary\" />\n            </div>\n            )\n        }\n        if (posts.length===0) {\n            return (<div>\n                    <AppNavbar/>\n                    <p>Sem Posts para mostrar :(</p>\n                </div>\n            )\n        }\n        else {\n            const postlist = posts.map((post,index) => (\n                <div className=\"card\" key={index}>\n                    <div className=\"card-body\">\n                        <h5 >{post.user}</h5>\n                        <label >Ã s {Moment(post.date).format(' h:mm:ss a, DD/MM/YYYY')}:</label>\n                        <Col sm=\"6\">\n                        <card  body style={{backgroundColor:'#878787'}}>\n                            <CardText style={{ color: 'white' }}>{post.text}</CardText>\n                        </card>\n                        </Col>\n                        <h5>Upvotes: {post.upvotes}</h5>\n                        <Button onClick={() => this.upvote(post.id)}>Upvote</Button>\n                    </div>\n                </div>\n            ))\n\n            return (<div>\n                    <AppNavbar/>\n                    {postlist}\n                </div>\n            )\n        }\n\n\n    }\n}\n\nexport default Posts;\n\n\n"]},"metadata":{},"sourceType":"module"}